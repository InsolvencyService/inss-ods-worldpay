trigger:
- develop
- release/*
  
pool:
  vmImage: windows-latest

variables:
- name: buildConfiguration
  value: 'Release'
- name: buildPlatform
  value: 'Any CPU'
- name: buildPlatformForProjectFile
  value: 'AnyCPU'

resources:
  repositories:
  - repository: inss-devops-common-lib
    type: github
    endpoint: InsolvencyService
    name: InsolvencyService/inss-devops-common-lib
    ref: develop

stages:
- stage: BuildTest
  displayName: 'Build and Test'
  jobs:  
      # Build .net projects
    - job: BuildNetProject
      steps:
      - task: UseDotNet@2
        inputs:
          version: '6.0.x'

      - task: DotNetCoreCLI@2
        displayName: NuGet Restore (INSS.ODS.Worldpay)
        inputs:
          command: 'restore'
          restoreSolution: '**/INSS.ODS.Worldpay.sln'
          feedsToUse: 'select'
          vstsFeed: '55aed121-b2ec-4f93-be0c-66c47a84fc23/9759cc91-0c79-4700-9db6-cd44445e3b36'

      - task: DotNetCoreCLI@2
        displayName: 'Build Solution'
        inputs:
          command: 'build'
          arguments: '--configuration $(buildConfiguration)'
      
      - task: DotNetCoreCLI@2
        displayName: 'Run Tests'
        inputs:
          command: test
          projects: '**/*Tests/*.csproj'
          arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'

      - task: DotNetCoreCLI@2
        displayName: 'Publish Project'
        inputs:
          command: 'publish'
          publishWebProjects: false
          projects: '**/INSS.ODS.WorldPay.csproj'
          arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
      
      - task: PublishPipelineArtifact@1
        displayName: 'Publish Artifact (WorldpayProxy)'
        inputs:
          targetPath: '$(Build.ArtifactStagingDirectory)'
          artifactName: 'INSS.ODS.WorldPay'
          publishLocation: 'pipeline'
        condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))


- stage: DeployDev
  displayName: 'Deploy to Dev'
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  variables:
    - group: Worldpay-Dev
  jobs:
    - template: deploy-jobs-template.yml
      parameters:
        environment: 'Dev'
        

- stage: DeploySIT
  displayName: 'Deploy to SIT'
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  variables:
    - group: Worldpay-SIT
  jobs:
    - template: deploy-jobs-template.yml
      parameters:
        environment: 'SIT'


- stage: DeployPreProd
  displayName: 'Deploy to PreProd'
  condition: and(succeeded(), contains(variables['build.sourceBranch'], 'refs/heads/release/'))
  variables:
    - group: Worldpay-PreProd
  jobs:
    - template: deploy-jobs-template.yml
      parameters:
        environment: 'PreProd'


- stage: DeployProd
  displayName: 'Deploy to Prod'
  condition: and(succeeded(), contains(variables['build.sourceBranch'], 'refs/heads/release/'))
  variables:
    - group: Worldpay-Prod
  jobs:
    - template: deploy-jobs-template.yml
      parameters:
        environment: 'Prod'
        azureSubscription: 'AppServicesDevOps-Prod'